{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Desktop/care/client/src/Users/ResidentsPage.js\";\nimport React from 'react';\n\nconst ResidentsList = () => {\n  const [residents, updateResidents] = React.useState([]); //React.useEffect (function effectFunction() {\n  //    fetch('http://localhost:4002/api/residents')\n  //    .then(response => response.json())\n  //    .then(({data:residents}) => {\n  //        updateResidents(residents)\n  //    });\n  //},[]);\n  //React.useEffect(function effectFunction() {\n  //    async function fetchBooks() {\n  //        const response = await fetch('http://localhost/4002/api/residents');\n  //        const json = await response.json();\n  //       updateResidents(json.data);\n  //   }\n  //   fetchBooks();\n  //}, []);\n\n  const NamesList = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, residents.map(resident => /*#__PURE__*/React.createElement(\"li\", {\n    key: resident._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 42\n    }\n  }, \" \", resident.residentFirstName, \" \"))));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NamesList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default ResidentsList; //return (\n//  <React.Fragment>\n//    <ErrorModal error={error} onClear={errorHandler} />\n//    {isLoading && (\n//      <div className=\"center\">\n//        <LoadingSpinner />\n//      </div>\n//    )}\n//    {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n//  </React.Fragment>\n//);\n//};","map":{"version":3,"sources":["/Users/steve/Desktop/care/client/src/Users/ResidentsPage.js"],"names":["React","ResidentsList","residents","updateResidents","useState","NamesList","map","resident","_id","residentFirstName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAM,CAACC,SAAD,EAAYC,eAAZ,IAA+BH,KAAK,CAACI,QAAN,CAAe,EAAf,CAArC,CADwB,CAGxB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACC;AACA;AACA;AACD;;AACA,QAAMC,SAAS,GAAG,mBACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,SAAS,CAACI,GAAV,CAAcC,QAAQ,iBAAI;AAAI,IAAA,GAAG,EAAEA,QAAQ,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAyBD,QAAQ,CAACE,iBAAlC,MAA1B,CAAL,CADF,CADJ;;AAMA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CADA;AAGE,CA5BN;;AA8BA,eAAeR,aAAf,C,CAIE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF","sourcesContent":["import React from 'react';\n\nconst ResidentsList = () => {\n    const [residents, updateResidents] = React.useState([]);\n\n    //React.useEffect (function effectFunction() {\n    //    fetch('http://localhost:4002/api/residents')\n    //    .then(response => response.json())\n    //    .then(({data:residents}) => {\n    //        updateResidents(residents)\n    //    });\n    //},[]);\n\n    //React.useEffect(function effectFunction() {\n    //    async function fetchBooks() {\n    //        const response = await fetch('http://localhost/4002/api/residents');\n    //        const json = await response.json();\n     //       updateResidents(json.data);\n     //   }\n     //   fetchBooks();\n    //}, []);\n    const NamesList = () => (\n        <div>\n          <ul>{residents.map(resident => <li key={resident._id}> {resident.residentFirstName} </li>)}</ul>\n        </div>\n    )\n    \n    return (\n    <div><NamesList/>\n    </div>\n    )}\n\nexport default ResidentsList;\n\n\n\n  //return (\n  //  <React.Fragment>\n  //    <ErrorModal error={error} onClear={errorHandler} />\n  //    {isLoading && (\n  //      <div className=\"center\">\n  //        <LoadingSpinner />\n  //      </div>\n  //    )}\n  //    {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n  //  </React.Fragment>\n  //);\n//};\n\n  "]},"metadata":{},"sourceType":"module"}