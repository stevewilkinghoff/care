{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Desktop/care/client/src/components/ResidentAssessment/AssessmentValue.js\";\nimport React, { useEffect } from \"react\";\nconst placeHolder = 1;\n\nconst CalculatedField = props => {\n  useEffect(() => {\n    let val = 0;\n\n    if (placeHolder) {\n      //if (props.values.oralAndVisionCare && props.values.socialSupport) {\n      val = parseInt(props.values.oralAndVisionCare) + parseInt(props.values.socialSupport);\n    }\n\n    props.setFieldValue(\"assessmentValue\", val);\n  }, [props.values]);\n  return /*#__PURE__*/React.createElement(\"input\", {\n    id: \"assessmentValue\",\n    type: \"text\",\n    name: \"assessmentValue\",\n    value: props.values.assessmentValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default CalculatedField;","map":{"version":3,"sources":["/Users/steve/Desktop/care/client/src/components/ResidentAssessment/AssessmentValue.js"],"names":["React","useEffect","placeHolder","CalculatedField","props","val","parseInt","values","oralAndVisionCare","socialSupport","setFieldValue","assessmentValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,MAAMC,WAAW,GAAG,CAApB;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/BH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,GAAG,GAAG,CAAV;;AACA,QAAIH,WAAJ,EAAiB;AACjB;AACAG,MAAAA,GAAG,GAAGC,QAAQ,CAACF,KAAK,CAACG,MAAN,CAAaC,iBAAd,CAAR,GAA2CF,QAAQ,CAACF,KAAK,CAACG,MAAN,CAAaE,aAAd,CAAzD;AACC;;AACDL,IAAAA,KAAK,CAACM,aAAN,CAAoB,iBAApB,EAAuCL,GAAvC;AACD,GAPQ,EAON,CAACD,KAAK,CAACG,MAAP,CAPM,CAAT;AASA,sBACE;AACE,IAAA,EAAE,EAAC,iBADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,iBAHP;AAIE,IAAA,KAAK,EAAEH,KAAK,CAACG,MAAN,CAAaI,eAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CAlBD;;AAoBA,eAAeR,eAAf","sourcesContent":["import React, { useEffect } from \"react\";\n\nconst placeHolder = 1;\nconst CalculatedField = props => {\n  useEffect(() => {\n    let val = 0;\n    if (placeHolder) {\n    //if (props.values.oralAndVisionCare && props.values.socialSupport) {\n    val = parseInt(props.values.oralAndVisionCare) + parseInt(props.values.socialSupport);\n    }\n    props.setFieldValue(\"assessmentValue\", val);\n  }, [props.values]);\n\n  return (\n    <input\n      id=\"assessmentValue\"\n      type=\"text\"\n      name=\"assessmentValue\"\n      value={props.values.assessmentValue}\n    />\n  );\n};\n\nexport default CalculatedField;"]},"metadata":{},"sourceType":"module"}