{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Desktop/care/client/src/fileselect.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Formik } from \"formik\"; //import yup from \"yup\";\n\nclass Thumb extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      thumb: undefined\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.file) {\n      return;\n    }\n\n    this.setState({\n      loading: true\n    }, () => {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({\n          loading: false,\n          thumb: reader.result\n        });\n      };\n\n      reader.readAsDataURL(nextProps.file);\n    });\n  }\n\n  render() {\n    const {\n      file\n    } = this.props;\n    const {\n      loading,\n      thumb\n    } = this.state;\n\n    if (!file) {\n      return null;\n    }\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 27\n        }\n      }, \"loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"img\", {\n      src: thumb,\n      alt: file.name,\n      className: \"img-thumbnail mt-2\",\n      height: 200,\n      width: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nclass App4 extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        file: null\n      },\n      onSubmit: values => {\n        alert(JSON.stringify({\n          fileName: values.file.name,\n          type: values.file.type,\n          size: `${values.file.size} bytes`\n        }, null, 2));\n      },\n      validationSchema: yup.object().shape({\n        file: yup.mixed().required()\n      }),\n      render: ({\n        values,\n        handleSubmit,\n        setFieldValue\n      }) => {\n        return /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: handleSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          for: \"file\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }\n        }, \"File upload\"), /*#__PURE__*/React.createElement(\"input\", {\n          id: \"file\",\n          name: \"file\",\n          type: \"file\",\n          onChange: event => {\n            setFieldValue(\"file\", event.currentTarget.files[0]);\n          },\n          className: \"form-control\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(Thumb, {\n          file: values.file,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }\n        })), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }\n        }, \"submit\"));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n;\nexport default App4; //render(<App />, document.getElementById('root'));","map":{"version":3,"sources":["/Users/steve/Desktop/care/client/src/fileselect.js"],"names":["React","render","Formik","Thumb","Component","state","loading","thumb","undefined","componentWillReceiveProps","nextProps","file","setState","reader","FileReader","onloadend","result","readAsDataURL","props","name","App4","values","alert","JSON","stringify","fileName","type","size","yup","object","shape","mixed","required","handleSubmit","setFieldValue","event","currentTarget","files"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport { Formik } from \"formik\";\n//import yup from \"yup\";\n\nclass Thumb extends React.Component {\n  state = {\n    loading: false,\n    thumb: undefined,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.file) { return; }\n\n    this.setState({ loading: true }, () => {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({ loading: false, thumb: reader.result });\n      };\n\n      reader.readAsDataURL(nextProps.file);\n    });\n  }\n\n  render() {\n    const { file } = this.props;\n    const { loading, thumb } = this.state;\n\n    if (!file) { return null; }\n\n    if (loading) { return <p>loading...</p>; }\n\n    return (<img src={thumb}\n      alt={file.name}\n      className=\"img-thumbnail mt-2\"\n      height={200}\n      width={200} />);\n  }\n}\n\nclass App4 extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Formik \n          initialValues={{ file: null }}\n          onSubmit={(values) => {\n            alert(\n              JSON.stringify(\n                { \n                  fileName: values.file.name, \n                  type: values.file.type,\n                  size: `${values.file.size} bytes`\n                },\n                null,\n                2\n              )\n            );\n          }} \n          validationSchema={yup.object().shape({\n            file: yup.mixed().required(),\n          })}\n          render={({ values, handleSubmit, setFieldValue }) => {\n            return (\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <label for=\"file\">File upload</label>\n                  <input id=\"file\" name=\"file\" type=\"file\" onChange={(event) => {\n                    setFieldValue(\"file\", event.currentTarget.files[0]);\n                  }} className=\"form-control\" />\n                  <Thumb file={values.file} />\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">submit</button>\n              </form>\n            );\n          }} />\n      </div>\n    );\n  }\n};\nexport default App4;\n//render(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}