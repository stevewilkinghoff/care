{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Desktop/care/client/src/components/ResidentAssessment/AssessmentValuePercent.js\";\nimport React, { useEffect } from \"react\";\nconst placeHolder = 1;\n\nconst CalculatedField1 = props => {\n  useEffect(() => {\n    let val = 0; //if (placeHolder==1) {\n\n    if (props.values.oralAndVisionCare && props.values.socialSupport) {\n      val = (parseInt(props.values.oralAndVisionCare) + parseInt(props.values.socialSupport)) / 51 * 100;\n    }\n\n    props.setFieldValue(\"assessmentValuePercent\", val);\n  }, [props.values]);\n  return /*#__PURE__*/React.createElement(\"input\", {\n    id: \"assessmentValuePercent\",\n    type: \"percent\",\n    name: \"assessmentValuePercent\",\n    value: props.values.assessmentValuePercent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default CalculatedField1;","map":{"version":3,"sources":["/Users/steve/Desktop/care/client/src/components/ResidentAssessment/AssessmentValuePercent.js"],"names":["React","useEffect","placeHolder","CalculatedField1","props","val","values","oralAndVisionCare","socialSupport","parseInt","setFieldValue","assessmentValuePercent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,MAAMC,WAAW,GAAG,CAApB;;AACA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAChCH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,GAAG,GAAG,CAAV,CADc,CAEd;;AACA,QAAID,KAAK,CAACE,MAAN,CAAaC,iBAAb,IAAkCH,KAAK,CAACE,MAAN,CAAaE,aAAnD,EAAkE;AAClEH,MAAAA,GAAG,GAAG,CAACI,QAAQ,CAACL,KAAK,CAACE,MAAN,CAAaC,iBAAd,CAAR,GAA2CE,QAAQ,CAACL,KAAK,CAACE,MAAN,CAAaE,aAAd,CAApD,IAAkF,EAAlF,GAAqF,GAA3F;AACC;;AACDJ,IAAAA,KAAK,CAACM,aAAN,CAAoB,wBAApB,EAA8CL,GAA9C;AACD,GAPQ,EAON,CAACD,KAAK,CAACE,MAAP,CAPM,CAAT;AASA,sBACE;AACE,IAAA,EAAE,EAAC,wBADL;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,IAAI,EAAC,wBAHP;AAIE,IAAA,KAAK,EAAEF,KAAK,CAACE,MAAN,CAAaK,sBAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CAlBD;;AAoBA,eAAeR,gBAAf","sourcesContent":["import React, { useEffect } from \"react\";\n\nconst placeHolder = 1;\nconst CalculatedField1 = props => {\n  useEffect(() => {\n    let val = 0;\n    //if (placeHolder==1) {\n    if (props.values.oralAndVisionCare && props.values.socialSupport) {\n    val = (parseInt(props.values.oralAndVisionCare) + parseInt(props.values.socialSupport))/51*100;\n    }\n    props.setFieldValue(\"assessmentValuePercent\", val);\n  }, [props.values]);\n\n  return (\n    <input\n      id=\"assessmentValuePercent\"\n      type=\"percent\"\n      name=\"assessmentValuePercent\"\n      value={props.values.assessmentValuePercent}\n    />\n  );\n};\n\nexport default CalculatedField1;"]},"metadata":{},"sourceType":"module"}