{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Desktop/care/client/src/Users/ResidentsPage.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst ResidentsList = () => {\n  const [residents, updateResidents] = React.useState([]);\n  useEffect(function effectFunction() {\n    fetch('http://localhost:4002/api/residents').then(response => response.json()).then(({\n      data: residents\n    }) => {\n      updateResidents(residents);\n    });\n  }, []); //React.useEffect(function effectFunction() {\n  //  async function fetchBooks() {\n  //        const response = await fetch('http://localhost/4002/api/residents');\n  //        const json = await response.json();\n  //        updateResidents(json.data);\n  //    }\n  //    fetchBooks();\n  //}, []);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Fuck You\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, residents.map(resident => /*#__PURE__*/React.createElement(\"li\", {\n    key: resident._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, resident))));\n};\n\nexport default ResidentsList; //return (\n//  <React.Fragment>\n//    <ErrorModal error={error} onClear={errorHandler} />\n//    {isLoading && (\n//      <div className=\"center\">\n//        <LoadingSpinner />\n//      </div>\n//    )}\n//    {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n//  </React.Fragment>\n//);\n//};","map":{"version":3,"sources":["/Users/steve/Desktop/care/client/src/Users/ResidentsPage.js"],"names":["React","useState","useEffect","ResidentsList","residents","updateResidents","effectFunction","fetch","then","response","json","data","map","resident","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAM,CAACC,SAAD,EAAYC,eAAZ,IAA+BL,KAAK,CAACC,QAAN,CAAe,EAAf,CAArC;AAEAC,EAAAA,SAAS,CAAE,SAASI,cAAT,GAA0B;AACjCC,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEM,CAAC;AAACG,MAAAA,IAAI,EAACP;AAAN,KAAD,KAAsB;AACxBC,MAAAA,eAAe,CAACD,SAAD,CAAf;AACH,KAJD;AAKH,GANQ,EAMP,EANO,CAAT,CAHwB,CAWxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,SAAS,CAACQ,GAAV,CAAcC,QAAQ,iBACnB;AAAI,IAAA,GAAG,EAAEA,QAAQ,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBD,QAAxB,CADH,CADL,CAFJ,CADA;AASE,CA7BN;;AA+BA,eAAeV,aAAf,C,CAIE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF","sourcesContent":["import React, {useState, useEffect}  from 'react';\n\nconst ResidentsList = () => {\n    const [residents, updateResidents] = React.useState([]);\n\n    useEffect (function effectFunction() {\n        fetch('http://localhost:4002/api/residents')\n        .then(response => response.json())\n        .then(({data:residents}) => {\n            updateResidents(residents)\n        });\n    },[]);\n\n    //React.useEffect(function effectFunction() {\n    //  async function fetchBooks() {\n    //        const response = await fetch('http://localhost/4002/api/residents');\n    //        const json = await response.json();\n    //        updateResidents(json.data);\n    //    }\n    //    fetchBooks();\n    //}, []);\n       \n    return (\n    <div>\n        <h4>Fuck You</h4>\n        <ul>\n            {residents.map(resident=>(\n                <li key={resident._id}>{resident}</li>\n            ))}\n        </ul>\n        </div>\n    )}\n\nexport default ResidentsList;\n\n\n\n  //return (\n  //  <React.Fragment>\n  //    <ErrorModal error={error} onClear={errorHandler} />\n  //    {isLoading && (\n  //      <div className=\"center\">\n  //        <LoadingSpinner />\n  //      </div>\n  //    )}\n  //    {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n  //  </React.Fragment>\n  //);\n//};\n\n  "]},"metadata":{},"sourceType":"module"}