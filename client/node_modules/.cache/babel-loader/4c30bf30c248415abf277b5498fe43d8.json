{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Desktop/care/client/src/components/ResidentSetUp/ListResidents.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { useFormik } from \"formik\";\nimport \"../styles.css\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nconst list = [{\n  id: 'a',\n  firstname: 'Robin',\n  lastname: 'Wieruch',\n  year: 1988\n}, {\n  id: 'b',\n  firstname: 'Dave',\n  lastname: 'Davidds',\n  year: 1990\n}];\n\nconst TestShit = () => /*#__PURE__*/React.createElement(List, {\n  list: list,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 24\n  }\n});\n\nconst List = ({\n  list\n}) => /*#__PURE__*/React.createElement(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }\n}, list.map(item => /*#__PURE__*/React.createElement(ListItem, {\n  key: item.id,\n  item: item,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }\n})));\n\nconst ListItem = ({\n  item\n}) => /*#__PURE__*/React.createElement(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }\n}, item.id), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }\n}, item.firstname), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }\n}, item.lastname), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }\n}, item.year));\n\nconst SignupForm = () => {\n  const formik = useFormik({\n    initialValues: {\n      residents: []\n    },\n    onSubmit: values => {\n      //alert(JSON.stringify(values, null, 2));\n      //const residents = values.residents;\n      axios({\n        method: \"GET\",\n        url: \"http://localhost:4001/api/listresidents\",\n        data: values\n      });\n      console.log(formik.values);\n    }\n  }); // now test sending name and email to a route created that will return the data to screen\n  // this is a test to be able to see if we can post to database\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, \"List Residents\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Submit\"))));\n};\n\nfunction ListResidents() {\n  return /*#__PURE__*/React.createElement(SignupForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 10\n    }\n  });\n}\n\nexport default ListResidents; //function IdiomaticReactList(props) {\n//  return (\n//    <div>\n//      {props.items.map((item, index) => (\n//        <Item key={index} item={item} />\n//      ))}\n//    </div>\n//  );\n//}","map":{"version":3,"sources":["/Users/steve/Desktop/care/client/src/components/ResidentSetUp/ListResidents.js"],"names":["React","axios","useFormik","Container","Row","Col","list","id","firstname","lastname","year","TestShit","List","map","item","ListItem","SignupForm","formik","initialValues","residents","onSubmit","values","method","url","data","console","log","handleSubmit","ListResidents"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { useFormik } from \"formik\";\nimport \"../styles.css\";\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\n\nconst list = [\n    {\n      id: 'a',\n      firstname: 'Robin',\n      lastname: 'Wieruch',\n      year: 1988,\n    },\n    {\n      id: 'b',\n      firstname: 'Dave',\n      lastname: 'Davidds',\n      year: 1990,\n    },\n  ];\n   \nconst TestShit = () => <List list={list} />;\n   \n  const List = ({ list }) => (\n    <ul>\n      {list.map(item => (\n        <ListItem key={item.id} item={item} />\n      ))}\n    </ul>\n  );\n   \n  const ListItem = ({ item }) => (\n    <li>\n      <div>{item.id}</div>\n      <div>{item.firstname}</div>\n      <div>{item.lastname}</div>\n      <div>{item.year}</div>\n    </li>\n  );\n\n\n\n\n\nconst SignupForm = () => {\n  const formik = useFormik({\n    initialValues: {residents:[]\n                    },\n    onSubmit: values => {\n      //alert(JSON.stringify(values, null, 2));\n      //const residents = values.residents;\n      axios({\n          method: \"GET\",\n          url: \"http://localhost:4001/api/listresidents\",\n          data: values\n        });\n        console.log(formik.values);\n        }\n    });\n\n    \n\n    // now test sending name and email to a route created that will return the data to screen\n    // this is a test to be able to see if we can post to database\n\n  return (\n    <>\n    <h3>List Residents</h3>\n    <form onSubmit={formik.handleSubmit} >\n    \n    <div/>\n      <hr/>\n      <div>\n      <button type=\"submit\">Submit</button>\n      </div>\n    </form>\n    </>\n  );\n};\n\nfunction ListResidents() {\n  return <SignupForm />;\n}\n\nexport default ListResidents;\n\n\n//function IdiomaticReactList(props) {\n//  return (\n//    <div>\n//      {props.items.map((item, index) => (\n//        <Item key={index} item={item} />\n//      ))}\n//    </div>\n//  );\n//}"]},"metadata":{},"sourceType":"module"}